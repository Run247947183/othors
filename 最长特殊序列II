class Solution {
    public int findLUSlength(String[] strs) {
        HashMap<String, Integer> map = new HashMap<>();
        for (String s : strs) {
            int value = map.getOrDefault(s, 0);
            map.put(s, value + 1);
        }
        int max = 0;
        //存放重复的字符串
        HashSet<String> set1 = new HashSet<>();
        //存放未重复的字符串
        HashSet<String> set2 = new HashSet<>();
        for (Map.Entry<String, Integer> entry : map.entrySet()) {
            String key = entry.getKey();
            int value = entry.getValue();
            if (value > 1) {
                set1.add(key);
            }
            else {
                set2.add(key);
            }
        }
        for (String s2 : set2) {
            int cur = s2.length();
            for (String s1 : set1) {
                if (isSubsequence(s2, s1)) {
                    cur = 0;
                    break;
                }
            }
            max = Math.max(cur, max);
        }
        return max == 0 ? -1 : max;
    }
    private boolean isSubsequence(String s2, String s1) {
        int index2 = 0, index1 = 0;
        while (index2 < s2.length() && index1 < s1.length()) {
            if (s2.charAt(index2) == s1.charAt(index1)) {
                index2++;
            }
            index1++;
        }
        return index2 == s2.length();
    }
}
